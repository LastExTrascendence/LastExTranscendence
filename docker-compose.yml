version: "3"

services:
  frontend:
    build: ./frontend/
    container_name: frontend
    depends_on:
      - backend
      # backend:
      #   condition: service_healthy
    env_file:
      - ./frontend/frontend/.env
    # network 설정에 따라 삭제 가능
    expose:
      - "3333"
    healthcheck:
      interval: 5s
      test: ["CMD-SHELL", "wget -O - https://localhost:3333 || exit 1"]
      timeout: 3s
      retries: 3
    image: frontend:LastExTranscendence
    init: true
    networks:
      - transcendence
    ports:
      - 3333:3333
    restart: on-failure
    volumes:
      - ./frontend/frontend:/app

  backend:
    build: ./backend/
    container_name: backend
    depends_on:
      postgresql:
        condition: service_healthy
    # env_file:
    #   - ./backend/.env
    # network 설정에 따라 삭제 가능
    expose:
      - "3000"
    healthcheck:
      interval: 5s
      test: ["CMD-SHELL", "wget -O - https://localhost:3000 || exit 1"]
      timeout: 3s
      retries: 3
    image: backend:LastExTranscendence
    init: true
    networks:
      - transcendence
    ports:
      - 3000:3000
    restart: on-failure
    volumes:
      - ./backend:/app

  postgresql:
    container_name: postgresql
    command: postgres -c 'hba_file=/var/lib/postgresql/pg_hba.conf'
    env_file:
      - ./postgresql.env
    environment:
      - PGUSER=postgres
    # network 설정에 따라 삭제 가능
    expose:
      - "5432"
    healthcheck:
      interval: 5s
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-d",
          "$${POSTGRES_DB}",
          "-U",
          "$${POSTGRES_USER}",
        ]
      timeout: 3s
      retries: 3
    image: postgres:16-alpine3.18
    networks:
      - transcendence
    ports:
      - 5432:5432
    restart: on-failure
    volumes:
      - postgresql:/var/lib/postgresql/data
      - ./pg_hba.conf:/var/lib/postgresql/pg_hba.conf

  pgadmin:
    container_name: pgadmin
    depends_on:
      postgresql:
        condition: service_healthy
    env_file:
      - ./pgadmin.env
    # network 설정에 따라 삭제 가능
    expose:
      - 5050
    # healthcheck:
    #   interval: 5s
    #   test: ["CMD-SHELL", "wget -O - http://localhost:80/misc/ping || exit 1"]
    #   timeout: 3s
    #   retries: 3
    image: dpage/pgadmin4:8.0
    networks:
      - transcendence
    ports:
      - 5050:80
    restart: on-failure
    volumes:
      - ./pgadmin_servers.json:/pgadmin4/servers.json

  redis:
    build: ./redis
    container_name: redis
    expose:
      - "6379"
    healthcheck:
      interval: 5s
      test: ["CMD-SHELL", "redis-cli -h localhost -p 6379 ping || exit 1"]
      timeout: 3s
      retries: 3
      start_period: 5s
    image: redis:LastExTranscendence
    init: true
    networks:
      - transcendence
    restart: on-failure:3
    ports:
      - 6379:6379

networks:
  transcendence:
    name: transcendence
    driver: bridge

volumes:
  frontend:
    name: frontend
    driver: local
    driver_opts:
      o: "bind"
      type: "none"
      device: /Users/jusohn/goinfre/transcendence/frontend

  backend:
    name: backend
    driver: local
    driver_opts:
      o: "bind"
      type: "none"
      device: /Users/jusohn/goinfre/transcendence/backend

  postgresql:
    name: postgresql
    driver: local
    driver_opts:
      o: "bind"
      type: "none"
      device: /Users/jusohn/data
